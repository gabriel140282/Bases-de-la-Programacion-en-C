Index: README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>https://github.com/gabriel140282/Bases-de-la-Programacion-en-C.git\r\n\r\nEnunciado de los ejercicios: Ejercicios por parejas/trios con un único repositorio en Github\r\nDeclaración de variables\r\n\r\nUtilidad de las variables: Crea un programa en C++ que haga uso de variables para almacenar información. Por ejemplo, un programa que solicite al usuario su nombre y edad, almacene estos datos en variables y luego los imprima en pantalla.\r\nÁmbito de las variables: Crea un programa en C++ que demuestre el uso de variables locales y globales. Asegúrate de mostrar cómo las variables locales se limitan a su función respectiva, mientras que las variables globales son accesibles desde cualquier parte del código.\r\nSintaxis de declaración: Practica la declaración de variables en C++ en varios contextos: dentro de una función, fuera de las funciones (variables globales), dentro de un bloque (como dentro de un bucle o una declaración if), etc.\r\nTipos de datos: Crea un programa en C++ que demuestre el uso de varios tipos de datos en C++, como int, double, char, y bool. Para cada tipo de datos, muestra cómo se puede inicializar y utilizar.\r\nInstrucciones de pruebas y operadores\r\n\r\nInstrucciones de prueba: Crea un programa en C++ que solicite al usuario su edad y, utilizando una declaración if-else, imprima si el usuario es mayor o menor de edad.\r\nOperadores: Crea un programa que demuestre el uso de varios operadores en C++, como los operadores aritméticos (+, -, *, /, %), los operadores de comparación (==, !=, <, >, <=, >=), y los operadores lógicos (&&, ||, !).\r\nInstrucciones de bucle\r\n\r\nBucle for: Crea un programa en C++ que imprima los números del 1 al 10 utilizando un bucle for.\r\nBucle while: Crea un programa en C++ que solicite al usuario un número y luego imprima la tabla de multiplicar de ese número utilizando un bucle while.\r\nBucle do: Crea un programa en C++ que solicite al usuario un número y luego imprima la tabla de multiplicar de ese número utilizando un bucle do-while.\r\nInstrucciones de salto: Crea un programa que utilice la instrucción de salto 'break' para salir de un bucle cuando se cumpla una cierta condición.\r\nArrays\r\n\r\nDeclaración y uso de arrays: Crea un programa en C++ que declare un array de enteros, lo llene con los primeros 10 números naturales y luego los imprima en pantalla.\r\nFunciones y prototipos\r\n\r\nDeclaración de una función: Declara una función que devuelva la suma de dos números y luego utilízala en un programa.\r\nFunciones y procedimientos: Declara una función (que devuelve un valor) y un procedimiento (que no devuelve un valor) y utilízalos en un programa.\r\nLlamada de las funciones: Declara varias funciones y luego llama a esas funciones desde main() o desde otras funciones.\r\nGestión de las variables locales: Muestra cómo las variables locales se crean y destruyen al entrar y salir de una función.\r\nDefinición de funciones homónimas (polimorfismo): Declara varias funciones con el mismo nombre pero con diferentes listas de parámetros y utilízalas en un programa.\r\nFunciones con número variable de argumentos: Declara y utiliza una función que tome un número variable de argumentos.\r\nAsignación de valores por defecto a los argumentos: Declara y utiliza una función que tenga algunos argumentos con valores predeterminados.\r\nFunciones en línea: Declara y utiliza una función inline para demostrar cómo funciona.\r\nFunciones externas de tipo C: Crea un programa que llame a una función que está en un archivo de origen diferente.\r\nFunciones recursivas: Crea un programa que utilice una función recursiva, como el cálculo de factorial o la secuencia de Fibonacci.\r\nLa función main(): Explora las diferentes formas en que se puede declarar y utilizar la función main() en C++.\r\nPunteros\r\n\r\nPunteros de variables: Crea un programa que declare punteros a variables y los utilice.\r\nPunteros y arrays: Crea un programa que utilice punteros para recorrer y modificar un array.\r\nAsignación de memoria: Crea un programa que utilice la asignación de memoria dinámica (new y delete).\r\nAritmética de los punteros: Crea un programa que demuestre la aritmética de punteros.\r\nPunteros de punteros: Crea un programa que declare y utilice punteros a punteros.\r\nPunteros de funciones: Crea un programa que declare y utilice punteros a funciones.\r\nReferencias\r\n\r\nReferencias: Crea un programa que declare y utilice referencias.\r\nConstantes\r\n\r\nConstantes simbólicas: Declara y utiliza constantes simbólicas en un programa.\r\nEl tipo void: Muestra cómo se puede utilizar el tipo void en C++.\r\nLos alias de tipo: typedef: Declara y utiliza alias de tipo en un programa.\r\nConstantes y enumeraciones: Declara y utiliza constantes y enumeraciones en un programa.\r\nAquí tienes algunos de los ejercicios detallados con pasos para realizarlos\r\nDeclaración de variables - Utilidad de las variables\r\n\r\nPaso 1: Inicia CLion y crea un nuevo proyecto en C++.\r\nPaso 2: Dentro de la función principal, declara dos variables: una string para el nombre y una integer para la edad.\r\nPaso 3: Utiliza std::cout para solicitar al usuario su nombre y std::cin para almacenar la entrada en la variable del nombre.\r\nPaso 4: Repite el paso 3 para la edad.\r\nPaso 5: Utiliza std::cout para imprimir la edad y el nombre del usuario.\r\nPaso 6: Ejecuta el programa y verifica que funcione correctamente.\r\nInstrucciones de pruebas y operadores - Instrucciones de prueba\r\n\r\nPaso 1: Inicia CLion y crea un nuevo proyecto en C++.\r\nPaso 2: Dentro de la función principal, solicita al usuario su edad y almacena el resultado en una variable.\r\nPaso 3: Utiliza una declaración if-else para verificar si el usuario es mayor de 18.\r\nPaso 4: Si el usuario es mayor de 18, imprime un mensaje diciendo que el usuario es mayor de edad. De lo contrario, imprime un mensaje diciendo que el usuario es menor de edad.\r\nPaso 5: Ejecuta el programa y verifica que funcione correctamente.\r\nInstrucciones de bucle - Bucle for\r\n\r\nPaso 1: Inicia CLion y crea un nuevo proyecto en C++.\r\nPaso 2: Dentro de la función principal, utiliza un bucle for para imprimir los números del 1 al 10.\r\nPaso 3: El bucle for debe iniciar con un índice en 1, continuar mientras el índice sea menor o igual a 10, e incrementar el índice en cada iteración.\r\nPaso 4: Dentro del bucle, utiliza std::cout para imprimir el índice.\r\nPaso 5: Ejecuta el programa y verifica que imprima los números del 1 al 10 correctamente.\r\nArrays - Declaración y uso de arrays\r\n\r\nPaso 1: Inicia CLion y crea un nuevo proyecto en C++.\r\nPaso 2: Dentro de la función principal, declara un array de 10 enteros.\r\nPaso 3: Utiliza un bucle for para llenar el array con los primeros 10 números naturales.\r\nPaso 4: Utiliza un segundo bucle for para imprimir todos los elementos del array.\r\nPaso 5: Ejecuta el programa y verifica que imprima los números del 1 al 10 correctamente.\r\nFunciones y prototipos - Declaración de una función\r\n\r\nPaso 1: Inicia CLion y crea un nuevo proyecto en C++.\r\nPaso 2: Declara una función llamada 'suma' fuera de la función principal que tome dos enteros como argumentos y devuelva su suma.\r\nPaso 3: Dentro de la función principal, llama a la función 'suma' con dos números y almacena el resultado en una variable.\r\nPaso 4: Utiliza std::cout para imprimir el resultado.\r\nPaso 5: Ejecuta el programa y verifica que imprima la suma correcta.\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/README.md b/README.md
--- a/README.md	(revision b3803f014765eef89b3f959852ae9eca6d10b3c8)
+++ b/README.md	(date 1730753027217)
@@ -87,3 +87,30 @@
 Paso 3: Dentro de la función principal, llama a la función 'suma' con dos números y almacena el resultado en una variable.
 Paso 4: Utiliza std::cout para imprimir el resultado.
 Paso 5: Ejecuta el programa y verifica que imprima la suma correcta.
+
+#include <iostream>
+#include <string>
+using namespace std;
+
+
+
+#include <iostream>
+using namespace std;
+
+int main() {
+int numero;
+
+    while (true) {  // Bucle infinito
+        cout << "Ingresa un numero (0 para salir): ";
+        cin >> numero;
+
+        if (numero == 0) {
+            break;  // Sale del bucle cuando el número es 0
+        }
+
+        cout << "Ingresaste el numero: " << numero << "\n";
+    }
+
+    cout << "Has salido del bucle.\n";
+    return 0;
+}
\ No newline at end of file
Index: Ejercicio 7/calculos.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Ejercicio 7/calculos.cpp b/Ejercicio 7/calculos.cpp
new file mode 100644
--- /dev/null	(date 1730753838929)
+++ b/Ejercicio 7/calculos.cpp	(date 1730753838929)
@@ -0,0 +1,19 @@
+#include "calculos.h"
+#include <iostream>
+using namespace std;
+
+void bucle()
+{
+    int numero;
+
+    while (true) {  // Bucle infinito
+        cout << "Ingresa un número (0 para salir): ";
+        cin >> numero;
+
+        if (numero == 0) {
+            break;  // Sale del bucle cuando el número es 0
+        }
+        cout << "Ingresaste el número: " << numero << "\n";
+    }
+    cout << "Has salido del bucle.\n";
+}
\ No newline at end of file
Index: Ejercicio 7/calculos.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Ejercicio 7/calculos.h b/Ejercicio 7/calculos.h
new file mode 100644
--- /dev/null	(date 1730753838941)
+++ b/Ejercicio 7/calculos.h	(date 1730753838941)
@@ -0,0 +1,6 @@
+#ifndef CALCULOS_H
+#define CALCULOS_H
+
+void bucle();
+
+#endif //CALCULOS_H
Index: CMakeLists.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/CMakeLists.txt b/CMakeLists.txt
new file mode 100644
--- /dev/null	(date 1730753885032)
+++ b/CMakeLists.txt	(date 1730753885032)
@@ -0,0 +1,17 @@
+cmake_minimum_required(VERSION 3.29)
+
+project(Bases-de-la-programacion)
+
+set(CMAKE_CXX_STANDARD 20)
+
+add_executable(Bases-de-la-programacion1
+        "Ejercicio 1/main.cpp"
+        "Ejercicio 1/perfil.cpp"
+
+)
+
+add_executable(Bases-de-la-programacion7
+        "Ejercicio 7/main.cpp"
+        "Ejercicio 7/calculos.cpp"
+
+)
\ No newline at end of file
Index: Ejercicio 1/main.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Ejercicio 1/main.cpp b/Ejercicio 1/main.cpp
new file mode 100644
--- /dev/null	(date 1730754661419)
+++ b/Ejercicio 1/main.cpp	(date 1730754661419)
@@ -0,0 +1,9 @@
+#include <iostream>
+#include <string>
+#include "perfil.h"
+using namespace std;
+
+int main() {
+    perfil();
+    return 0;
+}
\ No newline at end of file
Index: Ejercicio 1/perfil.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Ejercicio 1/perfil.cpp b/Ejercicio 1/perfil.cpp
new file mode 100644
--- /dev/null	(date 1730754661432)
+++ b/Ejercicio 1/perfil.cpp	(date 1730754661432)
@@ -0,0 +1,21 @@
+#include "perfil.h"
+#include <iostream>
+using namespace std;
+
+void perfil() {
+    int numero;
+
+    while (true) {  // Bucle infinito
+
+        cout << "Ingresa un numero (0 para salir): ";
+        cin >> numero;
+
+        if (numero == 0) {
+            break;  // Sale del bucle cuando el número es 0
+        }
+
+        cout << "Ingresaste el numero: " << numero << "\n";
+    }
+
+    cout << "Has salido del bucle.\n";
+}
\ No newline at end of file
Index: Ejercicio 1/perfil.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Ejercicio 1/perfil.h b/Ejercicio 1/perfil.h
new file mode 100644
--- /dev/null	(date 1730754289028)
+++ b/Ejercicio 1/perfil.h	(date 1730754289028)
@@ -0,0 +1,6 @@
+#ifndef PERFIL_H
+#define PERFIL_H
+
+void perfil();
+
+#endif //PERFIL_H
Index: Ejercicio 7/main.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Ejercicio 7/main.cpp b/Ejercicio 7/main.cpp
new file mode 100644
--- /dev/null	(date 1730753697370)
+++ b/Ejercicio 7/main.cpp	(date 1730753697370)
@@ -0,0 +1,8 @@
+#include "calculos.h"
+#include <iostream>
+using namespace std;
+
+int main() {
+bucle();
+    return 0;
+}
\ No newline at end of file
